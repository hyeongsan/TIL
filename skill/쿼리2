조인(JOIN):
두 개 이상의 테이블을 연결하여 관련 정보를 가져올 수 있습니다.
INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN 등 다양한 유형의 조인이 있습니다.

서브쿼리(Subquery):
하나의 쿼리 안에 또 다른 쿼리를 포함하여 사용할 수 있습니다.
서브쿼리는 주로 조건에 따라 결과를 필터링하거나, 계산에 활용할 때 사용합니다.

집계 함수(Aggregate Functions):
데이터 그룹의 특정 컬럼에 대한 계산을 수행하는 함수입니다.
SUM, AVG, COUNT, MIN, MAX 등이 일반적으로 사용됩니다.

조건문(CASE Statement):
특정 조건에 따라 결과를 다르게 처리할 때 사용합니다.
CASE문을 사용하여 조건에 따라 다른 값을 반환하거나 특정 동작을 수행할 수 있습니다.

서버 측 함수(Server-side Functions):
각 데이터베이스 시스템에 내장된 함수를 사용하여 데이터 처리나 변환을 수행할 수 있습니다.
각 데이터베이스의 문서를 참고하여 해당 함수를 알아보세요. (예: MySQL 함수, PostgreSQL 함수 등)

데이터 조작 언어(DML) 문장:
데이터를 삽입, 수정, 삭제하는 등 데이터 조작에 관련된 SQL 문장입니다.
INSERT, UPDATE, DELETE 등이 있습니다.

데이터 정의 언어(DDL) 문장:
데이터베이스의 스키마를 정의하거나 수정하는 SQL 문장입니다.
CREATE, ALTER, DROP 등이 있습니다.

--------------------------------------------------------------------------------------------------------------------------------

조인(JOIN):
-- 주문한 상품에 대한 고객 정보와 함께 조회
SELECT 주문.주문번호, 주문.상품, 고객.이름
FROM 주문
JOIN 고객 ON 주문.고객ID = 고객.ID;


서브쿼리(Subquery):
-- 주문한 상품 중에서 최고 가격을 가진 상품 정보 조회
SELECT *
FROM 상품
WHERE 가격 = (
  SELECT MAX(가격)
  FROM 주문
);


집계 함수(Aggregate Functions):
-- 고객별로 주문한 상품 수와 평균 가격 조회
SELECT 고객ID, COUNT(*) AS 주문수, AVG(가격) AS 평균가격
FROM 주문
GROUP BY 고객ID;


조건문(CASE Statement):
-- 주문한 상품의 가격이 1000원 이상인 경우 "고가상품", 미만인 경우 "저가상품"으로 분류하여 조회
SELECT 주문번호, 상품,
  CASE
    WHEN 가격 >= 1000 THEN '고가상품'
    ELSE '저가상품'
  END AS 상품분류
FROM 주문;


서버 측 함수(Server-side Functions):
-- 주문일자에서 연도와 월 정보만 추출하여 조회
SELECT 주문번호, DATE_FORMAT(주문일자, '%Y-%m') AS 연도월
FROM 주문;


데이터 조작 언어(DML) 문장:
-- 새로운 주문 추가
INSERT INTO 주문 (주문번호, 상품, 가격, 고객ID)
VALUES ('20230528001', '사과', 1500, 1);


데이터 정의 언어(DDL) 문장:
-- 새로운 테이블 생성
CREATE TABLE 회원 (
  ID INT PRIMARY KEY,
  이름 VARCHAR(50),
  이메일 VARCHAR(100),
  가입일자 DATE
);
